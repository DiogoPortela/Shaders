#pragma kernel CSMain
#pragma kernel CSClean

RWTexture2D<float4> Result;
RWStructuredBuffer<float4> data;
int count;
float value;
float deltaTime;

bool DetectPoints(float4 pixel){
    for(int i = 0; i < count; i ++){
        if(length(pixel.xyz - data[i].xyz) < data[i].z)
            return true; 
    }
    return false;
}

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if(DetectPoints(Result[id.xy]))
    {
        float nearbyForce = 0;
        for(int i = -1; i < 1; i++)
        {
            for(int j = -1; j < 1; j++)
            {
                if(id.x + i > 0 && id.y + j > 0 && id.x + i < 256 && id.y + j < 256)
                nearbyForce += Result[float2(id.x + i, id.y + j)].x;
            }
        }
        nearbyForce = 9 - nearbyForce;
        Result[id.xy] -= nearbyForce * value * deltaTime;
    }
}

[numthreads(8,8,1)]
void CSClean(uint3 id: SV_DISPATCHTHREADID){
    Result[id.xy] =  float4(1.0, 1.0, 1.0, 1.0);
}